{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","g1","g2","localeCompare","LENGTH","length","map","good","reverse","console","log","App","useState","setIsReversed","NONE","setSortType","className","type","classNames","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcF,SAASC,EACPC,EADF,GAGG,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,OAASH,EAAGG,UAC7C,MAEF,QACEP,EAAaQ,KAAI,SAAAC,GAAI,OAAIA,KAW7B,OAPIV,GACFC,EAAaU,UAIfC,QAAQC,IAAId,EAAUC,GAEfC,G,SAtCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAyCE,IAAMmB,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOf,EAAP,KAAmBgB,EAAnB,KACA,EAAgCD,mBAASpB,EAASsB,MAAlD,mBAAOlB,EAAP,KAAiBmB,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,kBACA,CACE,WAAYtB,IAAaJ,EAASO,UAGtCoB,QA5BmB,WACzBJ,EAAYvB,EAASO,UAmBjB,iCAaA,wBACEkB,KAAK,SACLD,UAAWE,IACT,qBACA,CACE,WAAYtB,IAAaJ,EAASY,SAGtCe,QArCa,WACnBJ,EAAYvB,EAASY,SA4BjB,4BAaA,wBACEa,KAAK,SACLD,UAAWE,IACT,qBACA,CACE,YAA2B,IAAfrB,IAGhBsB,QA9CU,WAChBN,GAAc,SAAAO,GAAO,OAAKA,MAqCtB,sBAaExB,IAAaJ,EAASsB,MAAQjB,IAC9B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAnDO,WACfN,GAAc,GACdE,EAAYvB,EAASsB,OA8Cf,sBAUJ,6BACGpB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CS,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrIpCc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.11726e27.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      visibleGoods.map(good => good);\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const getRevers = () => {\n    setIsReversed(current => !current);\n  };\n\n  const getReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info ',\n            {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success ',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning ',\n            {\n              'is-light': isReversed === false,\n            },\n          )}\n          onClick={getRevers}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={getReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}